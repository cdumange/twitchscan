// Code generated by mockery v2.14.0. DO NOT EDIT.

package gocess

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// mockMerger is an autogenerated mock type for the merger type
type mockMerger[T interface{}] struct {
	mock.Mock
}

// Execute provides a mock function with given fields: ctx, array
func (_m *mockMerger[T]) Execute(ctx context.Context, array []T) T {
	ret := _m.Called(ctx, array)

	var r0 T
	if rf, ok := ret.Get(0).(func(context.Context, []T) T); ok {
		r0 = rf(ctx, array)
	} else {
		r0 = ret.Get(0).(T)
	}

	return r0
}

type mockConstructorTestingTnewMockMerger interface {
	mock.TestingT
	Cleanup(func())
}

// newMockMerger creates a new instance of mockMerger. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMockMerger[T interface{}](t mockConstructorTestingTnewMockMerger) *mockMerger[T] {
	mock := &mockMerger[T]{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
